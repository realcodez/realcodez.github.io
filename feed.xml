<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RealCodez</title>
    <description>Where real world development meets real world failure and frustration for your entertainucation.
</description>
    <link>http://realcodez.com/</link>
    <atom:link href="http://realcodez.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 28 Dec 2016 18:41:46 -0600</pubDate>
    <lastBuildDate>Wed, 28 Dec 2016 18:41:46 -0600</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Behind the Scenes - Dec 14 2016</title>
        <description>&lt;p&gt;Getting &lt;a href=&quot;/2016/12/13/gems-missing-bundle-outdated-1-13-part-2.markdown&quot;&gt;Gems Missing from Bundle Outdated, Part 2&lt;/a&gt; 
published involved a bit of a detour. 
In addition to 
a different editor antagonist and a more involved editing process due to the nature of the raw content, 
new software was also in the mix (Adobe Premiere Pro vs. Sony Vegas) which meant almost going 
back to the drawing board to experiment
with options for file formats, codecs and rendering setup to help improve efficiencies. We could have 
skimped on
some of it, but I’m still trying to invest in the future, and myself being a bit involved in 
the editing process gave me a greater insight into the details and I was able to contribute
in some new ways that should pay for itself in future episodes. &lt;/p&gt;

&lt;p&gt;The good news about the next episode is the raw material for it was recorded the night after the material
for &lt;a href=&quot;/2016/12/13/gems-missing-bundle-outdated-1-13-part-2.markdown&quot;&gt;Part 2&lt;/a&gt; and I was able to actually
land the plane - no more cliffhangers for this mini-series! Here’s to publishing it soon.&lt;/p&gt;

&lt;p&gt;I also decided in the intro voice-over to call out the ‘raw’ quality of the content after some feedback
from another friend, for anyone coming into a video without any context. I reckon that VO template will 
continue to get iterated on. (Which reminds me, I have lots of checklists, that continue to grow. I can 
blog about that sometime). &lt;/p&gt;

&lt;p&gt;Finally, the &lt;a href=&quot;http://realcodez.com/about&quot;&gt;/about&lt;/a&gt; link lives now, which is a nice addition, esp. now
that I can reference it in a voice-over.  &lt;/p&gt;
</description>
        <pubDate>Wed, 14 Dec 2016 00:00:00 -0600</pubDate>
        <link>http://realcodez.com/2016/12/14/behind-the-scenes-14-dec-2016.html</link>
        <guid isPermaLink="true">http://realcodez.com/2016/12/14/behind-the-scenes-14-dec-2016.html</guid>
        
        
      </item>
    
      <item>
        <title>Gems Missing from Bundle Outdated in 1.13, Part 2</title>
        <description>&lt;p&gt;Having set ourselves up to add some smaller scoped tests in 
&lt;a href=&quot;/2016/11/23/gems-missing-bundle-outdated-1-13-part-1.html&quot;&gt;Part 1&lt;/a&gt; by refactoring the
contributor’s bug fix, it’s now time to write some tests in Part 2. Scroll to the 
bottom to jump into it.&lt;/p&gt;

&lt;p&gt;Before diving in, we address a couple of points of “Olde Business”, in particular
a point about referring to something “stupid” I did in Part 1. Learning is not
“stupid” and so I offer up a correction of myself.&lt;/p&gt;

&lt;p&gt;That said, later in this episode I refer to a certain step I take as
“feeling stupid” (around the 24:30 minute mark),
and a few minutes later I refer to a similar step as feeling sloppy. I don’t really
explain my thinking during the video, so I’d like to expand on it here.&lt;/p&gt;

&lt;p&gt;The specific issue is around making a call to a Bundler test helper method called
&lt;code&gt;build_spec&lt;/code&gt;. The method can receive an optional Array of version strings, and will
return an Array of Gem Specifications, one for each version string passed, which is
very handy. But if only a single version string is passed, the method still returns
the single Gem Specification in an Array. The method being tested only receives a
single spec, and so as I pass the results from &lt;code&gt;build_spec&lt;/code&gt; along, I repeatedly
forget that fact and move myself along by selecting the &lt;code&gt;.first&lt;/code&gt; from the result.&lt;/p&gt;

&lt;p&gt;Perhaps that method could be renamed to &lt;code&gt;build_specs&lt;/code&gt; to better express itself,
though that would be a large refactoring throughout the tests, or another option
would be to add a method &lt;code&gt;build_single_spec&lt;/code&gt; either locally or alongside &lt;code&gt;build_spec&lt;/code&gt;
among the test helpers.&lt;/p&gt;

&lt;p&gt;In any case, again, I wish my language were more precise. I am
identifying a small
&lt;a href=&quot;http://martinfowler.com/bliki/CodeSmell.html&quot;&gt;code smell&lt;/a&gt; with the naming of the
helper method, but “stupid” and “sloppy” are potentially derogatory for something that
is a normal thing to happen in code.&lt;/p&gt;

&lt;p&gt;One last point that I’ll discuss more in the next episode has to do with mocks. A large
part of this episode is spent flailing, trying to get a real Specification instance
to do what I need. There’s a secondary, behind-the-scenes reason for not using a mock
here, but the larger point is I tend to not favor mocks when I can get a related
class to do its own job. (Of course, I’m saying this and doing this while borrowing 
from a nearby test that I wrote, that has a hand-rolled mock in it). I’ll 
offer some more explanation next time, but for now I’ll acknowledge that this is an
issue I’m aware of here and I’d love to hear what you think! Shoot an email to the link below 
or hit up @realcodez on twitter.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you aren’t a subscriber, you’ll see the trailer below with an option to rent the specific episode.&lt;/em&gt;&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/195393394&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;hr width=&quot;20%&quot; /&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bundler/bundler/pull/5105&quot;&gt;Bundler PR #5105&lt;/a&gt; (&lt;a href=&quot;https://github.com/bundler/bundler/issues/4979&quot;&gt;original issue #4979&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://martinfowler.com/bliki/CodeSmell.html&quot;&gt;Code Smell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.justinweiss.com/articles/4-simple-memoization-patterns-in-ruby-and-one-gem/&quot;&gt;Ruby Memoization Patterns&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jamesshore.com/Blog/Red-Green-Refactor.html&quot;&gt;Red-Green-Refactor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 13 Dec 2016 00:00:00 -0600</pubDate>
        <link>http://realcodez.com/2016/12/13/gems-missing-bundle-outdated-1-13-part-2.html</link>
        <guid isPermaLink="true">http://realcodez.com/2016/12/13/gems-missing-bundle-outdated-1-13-part-2.html</guid>
        
        
      </item>
    
      <item>
        <title>Behind the Scenes - Dec 2 2016</title>
        <description>&lt;p&gt;I slowly woke up thinking through the episode recording I attempted last night. My mind a sleepy
whirlwind of thoughts.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://vimeo.com/ondemand/realcodez&quot;&gt;The first two episodes are in the can and posted&lt;/a&gt;. I’m already 
getting a lot of feedback on them
both, mainly through the process itself. The first episode was free and easy, got a decent amount
of views. After posting the second episode, I decided to fully engage the Vimeo OnDemand setup,
meaning no more outright free videos, but I made a Promo Code for a free rental, so folks could
still watch it and give me feedback. And … like no one’s viewed it. Like 4 instead of 37. 
(Until it was 5, and the 5th person actually paid for the rental, so we made our first $3). &lt;/p&gt;

&lt;p&gt;But it makes sense, for many folks who watched the week before, it was novel, and it didn’t require
a Vimeo account, and there were zero hoops to jump through. Now there are hoops. Aaaand, for 
anyone interested in picking up where I left off on the first episode, they were denied because
I went for a ancillary topic on the second. But, my brain and discussions with my son the editor
are already heading into the “what should we think about doing about free-ish content” direction.&lt;/p&gt;

&lt;p&gt;I’m wanting to also shoot for a weekly release cycle. That may be too ambitious, but we also can’t
tell yet because so much work has been going into one-time meta tasks, like setting up the sites,
making a trailer to satisfy the needs of Vimeo OnDemand (not that it was a bad idea - though you 
may think otherwise once you watch it), setting up
Twitter and Facebook accounts (there is one! - &lt;a href=&quot;http://facebook.com/realcodez&quot;&gt;http://facebook.com/realcodez&lt;/a&gt; 
- if that’s your
preference, though it’s not linked to from anywhere up until now).&lt;/p&gt;

&lt;p&gt;Last night I setup and hit record on Gems Missing in Bundler Outdated Part 2. And it’s rough going.
And I’m stuck-ish. And it’s long. Already 30 minutes.&lt;/p&gt;

&lt;p&gt;Here’s another challenge about this whole project. One of the great, though varying, pieces of feedback 
I received from friends was around episode length. As I write about in the &lt;a href=&quot;/2016/11/22/welcome-to-realcodez.html&quot;&gt;welcome post&lt;/a&gt;
(which I wish was already setup to be redirected to from &lt;code&gt;/about&lt;/code&gt; but haven’t done that yet), RubyTapas
was one of the many inspirations for this idea, but that content fits ideally into smaller episodes.
PeepCode Play-by-Play episodes were frequently 60-90 minutes (well, the two that readily come to mind, I
don’t have time for a proper sample size). Adam Savage does
&lt;a href=&quot;https://www.youtube.com/watch?v=L9O3KWrvxKA&quot;&gt;one day builds&lt;/a&gt; that get edited into varying lengths, but
are frequently 30+ minutes. One RealCodez viewer likes shorter videos, has a shorter attention span for
this sort of material, and multiple folks wished we’d worked in &lt;a href=&quot;https://www.youtube.com/watch?v=SND3v0i9uhE&quot;&gt;more funny bits&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;What’s the proper length for RealCodez?&lt;/p&gt;

&lt;p&gt;I’m not sure yet. I &lt;em&gt;am&lt;/em&gt; sure that I want to keep the reality factor high. This isn’t about
the final product, this is about educating &lt;em&gt;and&lt;/em&gt; encouraging all of us that coding is messy, we’re
not just cranking out known stuff, we’re discovering unknown stuff and that process is seldom linear.&lt;/p&gt;

&lt;p&gt;And yet. I am still making a final product here. And attempting to sell it to help justify the
time spent and confirm that there is an audience here. &lt;/p&gt;

&lt;p&gt;The final product IS the mess. It still needs &lt;em&gt;some&lt;/em&gt; packaging, &lt;em&gt;some&lt;/em&gt; sanding down, sprucing up, 
quality work. And while I’m attempting to expose the innards of the coding process, I’m caught up
in a meta process &lt;em&gt;producing&lt;/em&gt; the content, and that production pipeline is another layer that I’m 
mostly hiding from you (but might expose more in posts like this).&lt;/p&gt;

&lt;p&gt;Here’s the best part of this post for me. Go back several paragraphs to where I say &lt;em&gt;“Last night I 
setup and hit record … And it’s rough going. And I’m stuck-ish.”&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;I’ve already solved this problem in real life.&lt;/p&gt;

&lt;p&gt;Anyone paying attention and following the links on &lt;a href=&quot;http://realcodez.com/2016/11/23/gems-missing-bundle-outdated-1-13-part-1.html&quot;&gt;Part 1&lt;/a&gt;
can see the complete and merged-to-master &lt;a href=&quot;https://github.com/bundler/bundler/pull/5105&quot;&gt;PR&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I got stuck last night &lt;em&gt;re-solving&lt;/em&gt; the same code I’ve already written and was merged to master
17 days ago.&lt;/p&gt;

&lt;p&gt;When I started with the first episode, I wanted to focus on building out the screencasting 
pipeline. I needed an audio setup, a screen recording setup, video format to pass back and
forth to my editor, etc., so I picked code I’d already written so I could truly focus on the new
stuff, feeling confident that I could get some good new content going forward on new coding
tasks once a workflow was established. (Trivia: I recorded the raw material for the
first episode 3 separate times, as we iterated over different setups).&lt;/p&gt;

&lt;p&gt;But last night, recording was hard, because in the back of my head, while I’m trying to legitimately
resolve the problem “fresh” in the front of my head, the back is sort of freaking about a few
things. “This episode is too long already, this project will never work.” “I’ve already forgotten
how I wrote this in the first place.” 
“I can’t believe I’m thinking of publishing video showing me failing at repeating work I’ve already done
before.”&lt;/p&gt;

&lt;p&gt;The good news on waking up: I have a wealth of material to share here. It feels like too much.
But that’s a better problem to have. Here’s to pressing on. &lt;/p&gt;
</description>
        <pubDate>Fri, 02 Dec 2016 00:00:00 -0600</pubDate>
        <link>http://realcodez.com/2016/12/02/behind-the-scenes-02-dec-2016.html</link>
        <guid isPermaLink="true">http://realcodez.com/2016/12/02/behind-the-scenes-02-dec-2016.html</guid>
        
        
      </item>
    
      <item>
        <title>RSpec: Running Separate Individual Specs</title>
        <description>&lt;p&gt;In this episode we take a small detour and look at speeding up our workflow in the prior episode by figuring out 
how to run two specs out of different context blocks.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you aren’t a subscriber, you’ll see the trailer below with an option to rent the specific episode.&lt;/em&gt;&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/193652731&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;hr width=&quot;20%&quot; /&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://relishapp.com/rspec/rspec-core/docs/command-line/example-option&quot;&gt;RSpec –example option&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Episode edited by &lt;a href=&quot;https://www.youtube.com/user/SamSpielberg/videos&quot;&gt;SamSpielberg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 30 Nov 2016 00:00:00 -0600</pubDate>
        <link>http://realcodez.com/2016/11/30/rspec-running-separate-individual-specs.html</link>
        <guid isPermaLink="true">http://realcodez.com/2016/11/30/rspec-running-separate-individual-specs.html</guid>
        
        
      </item>
    
      <item>
        <title>Gems Missing from Bundle Outdated in 1.13, Part 1</title>
        <description>&lt;p&gt;In this, the inaugural episode of RealCodez, we’ll be looking at a PR
 submitted by a contributor that fixes a bug in Bundler 1.13 that I
 helped diagnose. The regression causes not all outdated gems to be
 listed in the outdated output. The problem with the PR is the author was, 
 understandably, unable
 to put together a failing test for the bug, so we begin looking at
 how we can refactor the code in question to allow for better testing.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you aren’t a subscriber, you’ll see the trailer below with an option to rent the specific episode.&lt;/em&gt;&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/192851112&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;hr width=&quot;20%&quot; /&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bundler/bundler/pull/5105&quot;&gt;Bundler PR #5105&lt;/a&gt; (&lt;a href=&quot;https://github.com/bundler/bundler/issues/4979&quot;&gt;original issue #4979&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://wiki.c2.com/?FeatureEnvySmell&quot;&gt;Code Envy&lt;/a&gt; &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://martinfowler.com/bliki/TellDontAsk.html&quot;&gt;Tell, Don’t Ask&lt;/a&gt; &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://refactoring.com/catalog/extractMethod.html&quot;&gt;Extract Method Refactoring&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Episode edited by &lt;a href=&quot;https://www.youtube.com/user/SamSpielberg/videos&quot;&gt;SamSpielberg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 23 Nov 2016 00:00:00 -0600</pubDate>
        <link>http://realcodez.com/2016/11/23/gems-missing-bundle-outdated-1-13-part-1.html</link>
        <guid isPermaLink="true">http://realcodez.com/2016/11/23/gems-missing-bundle-outdated-1-13-part-1.html</guid>
        
        
      </item>
    
      <item>
        <title>Welcome to RealCodez</title>
        <description>&lt;p&gt;Greetings, salutations, holas, and welcome to the RealCodez screencasts. &lt;/p&gt;

&lt;p&gt;I’m your host, Chris Morris (chrismo). I’ve been a software engineer for over 20 years
and for the last 5 have been doing Ruby and Rails coding at &lt;a href=&quot;http://www.livingsocial.com&quot;&gt;LivingSocial&lt;/a&gt;
where I currently manage the Application Site Reliability team. &lt;/p&gt;

&lt;p&gt;RealCodez is a series of screencasts aimed at giving you a behind-the-scenes look at
software development in a real, production environment. This isn’t an original
idea, but most other screencasts and instructional options these days
tend to focus on teaching you one specific thing at a time in an isolated example. &lt;/p&gt;

&lt;h3 id=&quot;how-did-we-get-to-here&quot;&gt;How Did We Get To Here?&lt;/h3&gt;

&lt;p&gt;You, presumably, clicked on linky things on the internets to get here.&lt;/p&gt;

&lt;p&gt;As far as myself, in October 2016 I was listening to 
one of the first &lt;a href=&quot;http://www.greaterthancode.com/&quot;&gt;Greater Than Code&lt;/a&gt; 
podcasts with 
 &lt;a href=&quot;https://www.greaterthancode.com/podcast/episode-002-avdi-grimm/&quot;&gt;Avdi Grimm&lt;/a&gt;
 and during their discussion, Avdi talked about all the
 production work that goes into &lt;a href=&quot;https://www.rubytapas.com/&quot;&gt;RubyTapas&lt;/a&gt; that
 most are probably unaware of, and while that’s necessary to produce a clean product,
 it has the one downside of hiding the mess from viewers. The panel went
 on to discuss the various Impostor Syndrome implications this presents. &lt;/p&gt;

&lt;p&gt;A lot of software instruction has this same challenge. In order to 
 clearly teach a specific technique, all of the usual real world clutter needs
 to be removed. But there are some interesting counter-examples. &lt;/p&gt;

&lt;p&gt;Geoffrey Grosenbach’s PeepCode videos (now at PluralSight) include Play-by-Play episodes
showing real life peoples solving real life problems, which I was a big fan of (&lt;a href=&quot;https://www.pluralsight.com/courses/play-by-play-aaroncorey&quot;&gt;this one with
Aaron Patterson and Corey Haines&lt;/a&gt; is fun).
&lt;a href=&quot;https://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052&quot;&gt;Working Effectively with Legacy Code&lt;/a&gt;
by Michael Feathers contains many samples of problems in real world code. Of course, 
&lt;a href=&quot;http://www.discovery.com/tv-shows/mythbusters/&quot;&gt;MythBusters&lt;/a&gt; is a great show, in part, because of the
insights into the discovery process, failures, warts and all.&lt;/p&gt;

&lt;p&gt;Impostor Syndrome is also a topic I care a lot about, one that I’ve &lt;a href=&quot;https://www.youtube.com/watch?v=i4cryg-q_YM&quot;&gt;spoken&lt;/a&gt; 
and &lt;a href=&quot;https://medium.com/@the_chrismo/beyond-impostor-syndrome-9db7e0b6158a#.5w1dccpz3&quot;&gt;written&lt;/a&gt; about before.&lt;/p&gt;

&lt;p&gt;Another challenge with presenting real world examples is most codebases 
developers work with are proprietary and they don’t have the rights to share their work. Since this
past summer, I’ve been regularly contributing to &lt;a href=&quot;http://bundler.io&quot;&gt;Bundler&lt;/a&gt;, so much so that they added me to
their core team. I realized it would be relatively simple for me to record my work there and
publish the results in a screencast.  &lt;/p&gt;

&lt;p&gt;With all of the various inspirations and opportunity, I felt this could be a Good Thing.&lt;/p&gt;

&lt;h3 id=&quot;why-realcodez-sounds-dorky&quot;&gt;Why ‘RealCodez’? Sounds dorky.&lt;/h3&gt;

&lt;p&gt;It’s intentionally dorky. I want this to be a “serious” look at real development challenges
while embracing the crazy, wheels-off nature of grappling with tech.&lt;/p&gt;

&lt;p&gt;Without any further ado, you can watch through the brief trailer below, or click through
 to our &lt;a href=&quot;/2016/11/23/gems-missing-bundle-outdated-1-13-part-1.html&quot;&gt;first episode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you love it, hate it, wanna critique it, I’d love to hear your thoughts, 
so shoot me an email at chrismo@clabs.org.&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/193652697&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

</description>
        <pubDate>Tue, 22 Nov 2016 00:00:00 -0600</pubDate>
        <link>http://realcodez.com/2016/11/22/welcome-to-realcodez.html</link>
        <guid isPermaLink="true">http://realcodez.com/2016/11/22/welcome-to-realcodez.html</guid>
        
        
      </item>
    
  </channel>
</rss>
